(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";var $grid=$(".our-classes").isotope({}),filterFns={numberGreaterThan50:function(){var t=$(this).find(".number").text();return parseInt(t,10)>50},ium:function(){return $(this).find(".name").text().match(/ium$/)}};$(".filter-button-group").on("click","a",function(){var t=$(this).attr("data-filter");t=filterFns[t]||t,$grid.isotope({filter:t})}),$(".button-group").each(function(t,i){var e=$(i);e.on("click","a",function(){e.find(".is-checked").removeClass("is-checked"),$(this).addClass("is-checked")})});

},{}],2:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var _TeacherCard=require("./vue/TeacherCard.js"),_TeacherCard2=_interopRequireDefault(_TeacherCard),_Expander=require("./vue/Expander.js"),_Expander2=_interopRequireDefault(_Expander),_filter=require("./filter.js"),_filter2=_interopRequireDefault(_filter);(new WOW).init(),$(document).ready(function(){$(".mobile-menu-trigger").on("click",function(){$(".mobile-menu--overlay").addClass("open")}),$(".close-menu").on("click",function(){$(".mobile-menu--overlay").removeClass("open")})});

},{"./filter.js":1,"./vue/Expander.js":3,"./vue/TeacherCard.js":4}],3:[function(require,module,exports){
"use strict";Vue.component("Expander",{template:'\n        <div class="Expander">\n            <div class="Expander__trigger" \n                @click="open=!open" \n                :class="open?\'active\':\'beforeBorder\'">\n                <svg \n                    class="Expander__trigger-Icon" \n                    :class="{open:open}" \n                    width="40" height="12" \n                    stroke="cornflowerblue">\n                    <polyline points="12,2 20,10 28,2" stroke-width="3" fill="none"></polyline>\n                </svg>\n                {{ title }}\n            </div>\n            <transition :name="animation">\n                <div class="Expander__body" v-show="open">\n                    <slot></slot>\n                </div>\n            </transition>\n        </div>\n    ',props:{title:{type:String,default:"title"},animation:{type:String,default:"rightToLeft"}},data:function(){return{open:!1}}});var vm=new Vue({el:".expanderSection",data:{},computed:{},methods:{},mounted:function(){}});

},{}],4:[function(require,module,exports){
"use strict";Vue.component("teachercard",{template:'\n        <div class="card teacher-card">\n            <div class="teacher-card-image">\n                <slot name="image"></slot>\n            </div>\n            <div class=teacher-card-info>\n                <h2>{{ teacher }}</h2>\n                <p>{{ title }}</p>\n            </div>\n            <div class="teacher-card-read-more">\n                <hr>\n                  <div class="teacher-card-read-more_link">\n                    <a @click="showModal = true">Read More</a>\n                  </div>\n                <hr>\n                <div class="teacher-card--modal" v-show="showModal">\n                    <transition name="modal">\n                        <div class="modal-mask">\n                            <div class="modal-wrapper" @click="showModal = false">\n                                <div class="modal-container" @click.stop>\n                                    <div class="modal-header">\n                                        <slot name="header"></slot>\n                                        <a class="popupCloseButton" @click="showModal = false">Close</a>\n                                    </div>\n                                    <div class="modal-body">\n                                        <slot name="body"></slot>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </transition>\n                </div>\n            </div>\n        </div>\n    ',props:{teacher:{type:String,default:"teacher"},title:{type:String,default:"title"}},data:function(){return{showModal:!1}}}),new Vue({el:".teacher-cards"});

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
