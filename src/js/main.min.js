(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";var $grid=$(".our-classes").isotope({}),filterFns={numberGreaterThan50:function(){var t=$(this).find(".number").text();return parseInt(t,10)>50},ium:function(){return $(this).find(".name").text().match(/ium$/)}};$(".filter-button-group").on("click","a",function(){var t=$(this).attr("data-filter");t=filterFns[t]||t,$grid.isotope({filter:t})}),$(".button-group").each(function(t,i){var e=$(i);e.on("click","a",function(){e.find(".is-checked").removeClass("is-checked"),$(this).addClass("is-checked")})});

},{}],2:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var _TeacherCard=require("./vue/TeacherCard.js"),_TeacherCard2=_interopRequireDefault(_TeacherCard),_Expander=require("./vue/Expander.js"),_Expander2=_interopRequireDefault(_Expander),_filter=require("./filter.js"),_filter2=_interopRequireDefault(_filter);(new WOW).init();

},{"./filter.js":1,"./vue/Expander.js":3,"./vue/TeacherCard.js":4}],3:[function(require,module,exports){
"use strict";Vue.component("Expander",{template:'\n        <div class="Expander">\n            <div class="Expander__trigger" \n                @click="open=!open" \n                :class="open?\'active\':\'beforeBorder\'">\n                <svg \n                    class="Expander__trigger-Icon" \n                    :class="{open:open}" \n                    width="40" height="12" \n                    stroke="cornflowerblue">\n                    <polyline points="12,2 20,10 28,2" stroke-width="3" fill="none"></polyline>\n                </svg>\n                {{ title }}\n            </div>\n            <transition :name="animation">\n                <div class="Expander__body" v-show="open">\n                    <slot></slot>\n                </div>\n            </transition>\n        </div>\n    ',props:{title:{type:String,default:"title"},animation:{type:String,default:"rightToLeft"}},data:function(){return{open:!1}}});var vm=new Vue({el:".expanderSection",data:{},computed:{},methods:{},mounted:function(){}});

},{}],4:[function(require,module,exports){
"use strict";Vue.component("teachercard",{template:'\n        <div class="card teacher-card">\n            <div class="teacher-card-image">\n                <slot></slot>\n            </div>\n            <div class=teacher-card-info>\n                <h2>{{ teacher }}</h2>\n                <p>{{ title }}</p>\n            </div>\n            <div class="teacher-card-social">\n                <hr>\n                  <div class="teacher-card-social_icons">\n                    <a href=""><img src="/img/article/teachers/Twitter.svg" alt="Twitter Logo"></a>\n                    <a href=""><img src="/img/article/teachers/Facebook.svg" alt="Facebook Logo"></a>\n                    <a href=""><img src="/img/article/teachers/instagram.svg" alt="Instagram Logo"></a>\n                  </div>\n                <hr>\n            </div>\n            <div class="teacher-card-quote">\n                <p>{{ quote }}</p>\n            </div>\n        </div>\n    ',props:{teacher:{type:String,default:"teacher"},title:{type:String,default:"title"},quote:{type:String,default:"quote"},animation:{type:String,default:"rightToLeft"}},data:function(){return{}}});var vm=new Vue({el:".teacher-cards",data:{},computed:{},methods:{},mounted:function(){}});

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvZmlsdGVyLmpzIiwic3JjL2pzL21haW4uanMiLCJzcmMvanMvdnVlL0V4cGFuZGVyLmpzIiwic3JjL2pzL3Z1ZS9UZWFjaGVyQ2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtZQ0NBLElBQUksT0FBUSxFQUFFLGdCQUFnQixZQUl0QixXQUVKLG9CQUFxQixXQUNuQixHQUFNLEdBQVMsRUFBRSxNQUFNLEtBQUssV0FBVyxNQUN2QyxPQUFPLFVBQVMsRUFBUSxJQUFNLElBR2hDLElBQUssV0FFSCxNQURhLEdBQUUsTUFBTSxLQUFLLFNBQVMsT0FDdkIsTUFBTSxTQUt4QixHQUFFLHdCQUF3QixHQUFHLFFBQVMsSUFBSyxXQUN6QyxHQUFJLEdBQWMsRUFBRSxNQUFNLEtBQUssY0FFL0IsR0FBYyxVQUFVLElBQWdCLEVBQ3hDLE1BQU0sU0FDSixPQUFRLE1BS1osRUFBRSxpQkFBaUIsS0FBSyxTQUFTLEVBQUcsR0FDaEMsR0FBTSxHQUFlLEVBQUUsRUFDdkIsR0FBYSxHQUFHLFFBQVMsSUFBSyxXQUM1QixFQUFhLEtBQUssZUFBZSxZQUFZLGNBQzdDLEVBQUUsTUFBTSxTQUFTOzs7cUZDL0J2QixHQUFBLGNBQUEsUUFBQSwyRUFDQSxVQUFBLFFBQUEsa0VBQ0EsUUFBQSxRQUFBLHlEQUpBLEdBQUksTUFBTTs7O1lDQVYsS0FBSSxVQUFVLFlBQ1YsU0FBQSxrd0JBcUJBLE9BQ0UsT0FDRSxLQUFNLE9BQ04sUUFBUyxTQUVYLFdBQ0UsS0FBTSxPQUNOLFFBQVMsZ0JBR2IsS0FoQ3NCLFdBaUNwQixPQUNFLE1BQU0sS0FNWixJQUFNLElBQUssR0FBSSxNQUNiLEdBQUksbUJBQ0osUUFFQSxZQUVBLFdBRUEsUUFSaUI7OztZQ3hDckIsS0FBSSxVQUFVLGVBQ1YsU0FBQSw2NEJBdUJBLE9BQ0UsU0FDRSxLQUFNLE9BQ04sUUFBUyxXQUVYLE9BQ0UsS0FBTSxPQUNOLFFBQVMsU0FFWCxPQUNFLEtBQU0sT0FDTixRQUFTLFNBRVgsV0FDRSxLQUFNLE9BQ04sUUFBUyxnQkFHYixLQTFDeUIsV0EyQ3ZCLFdBTUosSUFBTSxJQUFLLEdBQUksTUFDYixHQUFJLGlCQUNKLFFBRUEsWUFFQSxXQUVBLFFBUmlCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiLy8gaW5pdCBJc290b3BlXG52YXIgJGdyaWQgPSAkKCcub3VyLWNsYXNzZXMnKS5pc290b3BlKHtcbiAgICAvLyBvcHRpb25zXG4gIH0pO1xuXG4gIGNvbnN0IGZpbHRlckZucyA9IHtcbiAgICAvLyBzaG93IGlmIG51bWJlciBpcyBncmVhdGVyIHRoYW4gNTBcbiAgICBudW1iZXJHcmVhdGVyVGhhbjUwOiBmdW5jdGlvbigpIHtcbiAgICAgIGNvbnN0IG51bWJlciA9ICQodGhpcykuZmluZCgnLm51bWJlcicpLnRleHQoKTtcbiAgICAgIHJldHVybiBwYXJzZUludChudW1iZXIsIDEwKSA+IDUwO1xuICAgIH0sXG4gICAgLy8gc2hvdyBpZiBuYW1lIGVuZHMgd2l0aCAtaXVtXG4gICAgaXVtOiBmdW5jdGlvbigpIHtcbiAgICAgIGNvbnN0IG5hbWUgPSAkKHRoaXMpLmZpbmQoJy5uYW1lJykudGV4dCgpO1xuICAgICAgcmV0dXJuIG5hbWUubWF0Y2goL2l1bSQvKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gZmlsdGVyIGl0ZW1zIG9uIGJ1dHRvbiBjbGlja1xuJCgnLmZpbHRlci1idXR0b24tZ3JvdXAnKS5vbignY2xpY2snLCAnYScsIGZ1bmN0aW9uKCkge1xuICBsZXQgZmlsdGVyVmFsdWUgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtZmlsdGVyJyk7XG4gIC8vIHVzZSBmaWx0ZXJGbiBpZiBtYXRjaGVzIHZhbHVlXG4gIGZpbHRlclZhbHVlID0gZmlsdGVyRm5zW2ZpbHRlclZhbHVlXSB8fCBmaWx0ZXJWYWx1ZTtcbiAgJGdyaWQuaXNvdG9wZSh7XG4gICAgZmlsdGVyOiBmaWx0ZXJWYWx1ZVxuICB9KTtcbn0pO1xuXG4vLyBjaGFuZ2UgaXMtY2hlY2tlZCBjbGFzcyBvbiBidXR0b25zXG4kKCcuYnV0dG9uLWdyb3VwJykuZWFjaChmdW5jdGlvbihpLCBidXR0b25Hcm91cCkge1xuICAgIGNvbnN0ICRidXR0b25Hcm91cCA9ICQoYnV0dG9uR3JvdXApO1xuICAgICRidXR0b25Hcm91cC5vbignY2xpY2snLCAnYScsIGZ1bmN0aW9uKCkge1xuICAgICAgJGJ1dHRvbkdyb3VwLmZpbmQoJy5pcy1jaGVja2VkJykucmVtb3ZlQ2xhc3MoJ2lzLWNoZWNrZWQnKTtcbiAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2lzLWNoZWNrZWQnKTtcbiAgICB9KTtcbiAgfSk7IiwibmV3IFdPVygpLmluaXQoKTtcblxuaW1wb3J0IFRlYWNoZXJDYXJkIGZyb20gJy4vdnVlL1RlYWNoZXJDYXJkLmpzJ1xuaW1wb3J0IEV4cGFuZGVyIGZyb20gJy4vdnVlL0V4cGFuZGVyLmpzJ1xuaW1wb3J0IEZpbHRlciBmcm9tICcuL2ZpbHRlci5qcyciLCJWdWUuY29tcG9uZW50KFwiRXhwYW5kZXJcIiwge1xuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJFeHBhbmRlclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkV4cGFuZGVyX190cmlnZ2VyXCIgXG4gICAgICAgICAgICAgICAgQGNsaWNrPVwib3Blbj0hb3BlblwiIFxuICAgICAgICAgICAgICAgIDpjbGFzcz1cIm9wZW4/J2FjdGl2ZSc6J2JlZm9yZUJvcmRlcidcIj5cbiAgICAgICAgICAgICAgICA8c3ZnIFxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIkV4cGFuZGVyX190cmlnZ2VyLUljb25cIiBcbiAgICAgICAgICAgICAgICAgICAgOmNsYXNzPVwie29wZW46b3Blbn1cIiBcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCI0MFwiIGhlaWdodD1cIjEyXCIgXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZT1cImNvcm5mbG93ZXJibHVlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxwb2x5bGluZSBwb2ludHM9XCIxMiwyIDIwLDEwIDI4LDJcIiBzdHJva2Utd2lkdGg9XCIzXCIgZmlsbD1cIm5vbmVcIj48L3BvbHlsaW5lPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgIHt7IHRpdGxlIH19XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDx0cmFuc2l0aW9uIDpuYW1lPVwiYW5pbWF0aW9uXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkV4cGFuZGVyX19ib2R5XCIgdi1zaG93PVwib3BlblwiPlxuICAgICAgICAgICAgICAgICAgICA8c2xvdD48L3Nsb3Q+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L3RyYW5zaXRpb24+XG4gICAgICAgIDwvZGl2PlxuICAgIGAsXG4gICAgcHJvcHM6IHtcbiAgICAgIHRpdGxlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJ3RpdGxlJ1xuICAgICAgfSxcbiAgICAgIGFuaW1hdGlvbjoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICdyaWdodFRvTGVmdCdcbiAgICAgIH1cbiAgICB9LFxuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBvcGVuOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgXG4gIFxuICBjb25zdCB2bSA9IG5ldyBWdWUoe1xuICAgIGVsOiBcIi5leHBhbmRlclNlY3Rpb25cIixcbiAgICBkYXRhOiB7XG4gICAgfSxcbiAgICBjb21wdXRlZDoge1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgIH0sXG4gICAgbW91bnRlZCgpIHtcbiAgICB9XG4gIH0pOyIsIlZ1ZS5jb21wb25lbnQoXCJ0ZWFjaGVyY2FyZFwiLCB7XG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgdGVhY2hlci1jYXJkXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGVhY2hlci1jYXJkLWltYWdlXCI+XG4gICAgICAgICAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPXRlYWNoZXItY2FyZC1pbmZvPlxuICAgICAgICAgICAgICAgIDxoMj57eyB0ZWFjaGVyIH19PC9oMj5cbiAgICAgICAgICAgICAgICA8cD57eyB0aXRsZSB9fTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRlYWNoZXItY2FyZC1zb2NpYWxcIj5cbiAgICAgICAgICAgICAgICA8aHI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGVhY2hlci1jYXJkLXNvY2lhbF9pY29uc1wiPlxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiXCI+PGltZyBzcmM9XCIvaW1nL2FydGljbGUvdGVhY2hlcnMvVHdpdHRlci5zdmdcIiBhbHQ9XCJUd2l0dGVyIExvZ29cIj48L2E+XG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJcIj48aW1nIHNyYz1cIi9pbWcvYXJ0aWNsZS90ZWFjaGVycy9GYWNlYm9vay5zdmdcIiBhbHQ9XCJGYWNlYm9vayBMb2dvXCI+PC9hPlxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiXCI+PGltZyBzcmM9XCIvaW1nL2FydGljbGUvdGVhY2hlcnMvaW5zdGFncmFtLnN2Z1wiIGFsdD1cIkluc3RhZ3JhbSBMb2dvXCI+PC9hPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGhyPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGVhY2hlci1jYXJkLXF1b3RlXCI+XG4gICAgICAgICAgICAgICAgPHA+e3sgcXVvdGUgfX08L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgYCxcbiAgICBwcm9wczoge1xuICAgICAgdGVhY2hlcjoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICd0ZWFjaGVyJ1xuICAgICAgfSxcbiAgICAgIHRpdGxlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJ3RpdGxlJ1xuICAgICAgfSxcbiAgICAgIHF1b3RlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogJ3F1b3RlJ1xuICAgICAgfSxcbiAgICAgIGFuaW1hdGlvbjoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICdyaWdodFRvTGVmdCdcbiAgICAgIH1cbiAgICB9LFxuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIGNvbnN0IHZtID0gbmV3IFZ1ZSh7XG4gICAgZWw6IFwiLnRlYWNoZXItY2FyZHNcIixcbiAgICBkYXRhOiB7XG4gICAgfSxcbiAgICBjb21wdXRlZDoge1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgIH0sXG4gICAgbW91bnRlZCgpIHtcbiAgICB9XG4gIH0pOyJdfQ==
